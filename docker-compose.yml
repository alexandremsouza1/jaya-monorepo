version: "3"
services:
#   nginx:
#     build:
#       context: back_end
#       dockerfile: dockerfiles/nginx/Dockerfile
#     networks:
#       - my_network
#     ports:
#       - "8000:80"
#     volumes:
#       - my_volume:/var/log/nginx
#       - ./back_end/public:/var/www/html
#       - ./back_end/dockerfiles/nginx/default.conf:/etc/nginx/conf.d/default.conf
#     depends_on:
#       - api

#   api:
#     build:
#       context: back_end
#       dockerfile: dockerfiles/Dockerfile
#     volumes:
#       - ./back_end:/var/www/html
#     depends_on:
#       - db
#     networks:
#       - my_network

#   app:
#     build:
#       context: front_end
#       dockerfile: dockerfiles/Dockerfile
#       target: test-target
#       args:
#         npm_install_command: install
#     ports:
#       - 3000:3000
#       - 9229:9229
#     command: npm run dev
#     volumes:
#       - ./front_end/app:/usr/src/app:delegated
#     networks:
#       - my_network
    # app:
    #     build:
    #         context: front_end
    #         dockerfile: dockerfiles/Dockerfile
    #     volumes:
    #         - ./front_end/app:/code/src/
    #         - ./front_end/app/public:/code/public/
    #     ports:
    #         - 3000:3000
    #     networks:
    #         - my_network
    app:
        build:
            context: ./frontend/
            dockerfile: Dockerfile
        volumes:
        - ./frontend:/code/
        ports:
            - 3000:3000
        networks:
            - my_network
    db:
        image: mysql:8.0
        ports:
        - "3301-3399:3306"
        command: --default-authentication-plugin=mysql_native_password
        environment:
            MYSQL_DATABASE: payments
            MYSQL_USER: user
            MYSQL_PASSWORD: password
            MYSQL_ROOT_PASSWORD: secret
        volumes:
        - ./back_end/dockerfiles/mysql:/etc/mysql/conf.d
        - my_volume:/var/lib/mysql
        networks:
        - my_network
        security_opt:
        - seccomp:unconfined

volumes:
  my_volume:

networks:
  my_network:
    name: my_network
